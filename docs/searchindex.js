Search.setIndex({"docnames": ["_ZINBEstimator", "_cluster", "_config", "_data_loader", "_distributions", "_error", "_inference", "_logger_config", "_model", "_preffect", "_utils", "index", "preffect_cli", "preffect_factory"], "filenames": ["_ZINBEstimator.rst", "_cluster.rst", "_config.rst", "_data_loader.rst", "_distributions.rst", "_error.rst", "_inference.rst", "_logger_config.rst", "_model.rst", "_preffect.rst", "_utils.rst", "index.rst", "preffect_cli.rst", "preffect_factory.rst"], "titles": ["_ZINBEstimator.py module", "_cluster.py module", "_config.py module", "_data_loader.py module", "_distributions.py module", "_error.py module", "_inference.py module", "_logger_config.py module", "_model_py module", "_preffect.py module", "_utils.py module", "Welcome to PREFFECT's documentation!", "preffect_cli.py module", "preffect_factory.py module"], "terms": {"class": [0, 1, 3, 4, 6, 8, 9, 13], "wrapper": [0, 1], "zinbestim": [0, 11], "initial_pi_valu": 0, "1e": [0, 4], "05": 0, "0": [0, 3, 4, 6, 10, 12], "0001": 0, "001": 0, "005": 0, "01": 0, "1": [0, 3, 4, 6, 10, 12], "5": [0, 1, 6], "9": 0, "base": [0, 1, 3, 4, 5, 6, 8, 9, 10, 13], "object": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13], "compute_zinb_param": 0, "count": [0, 1, 3, 4, 6, 8], "estim": [0, 1], "zero": [0, 3, 4, 6, 8, 10], "inflat": [0, 4, 10], "neg": [0, 4, 8, 10], "binomi": [0, 4, 10], "zinb": [0, 4, 6, 8, 10], "paramet": [0, 3, 4, 6, 7, 8, 9, 10], "aic": 0, "from": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13], "given": [0, 3, 4, 6, 9], "set": [0, 1, 3, 6, 7, 8, 9, 10, 13], "data": [0, 1, 3, 4, 6, 8, 9, 10, 12], "numpi": [0, 3, 6, 10], "arrai": [0, 3, 6, 9, 10], "A": [0, 3, 4, 6, 7, 8, 9, 10, 12, 13], "return": [0, 3, 6, 7, 8, 9, 10, 12, 13], "tupl": [0, 3, 4, 7, 8, 13], "contain": [0, 1, 3, 6, 7, 8, 9, 10, 12, 13], "mu": [0, 1, 4, 8, 10], "theta": [0, 4, 8], "pi": [0, 4, 6, 8], "where": [0, 3, 4, 6, 8, 9, 10, 13], "The": [0, 3, 4, 6, 8, 9, 10, 12, 13], "mean": [0, 4, 6, 8, 10], "compon": [0, 4, 9, 10], "dispers": [0, 4, 6, 8], "akaik": 0, "inform": [0, 3, 8, 10], "criterion": 0, "valu": [0, 3, 4, 6, 8, 9, 10, 12], "fit": [0, 6], "usag": [0, 8], "zinb_estim": 0, "cluster": [1, 11, 13], "infer_obj": [1, 6], "configs_clust": 1, "cluster_file_nam": 1, "none": [1, 3, 4, 6, 8, 9, 10, 13], "cluster_count": [1, 13], "color_bi": 1, "leiden": 1, "cluster_omega": [1, 13], "fals": [1, 3, 4, 6, 9, 10, 12, 13], "umap_nneighbor": 1, "10": [1, 3], "cluster_aim": 1, "extract": [1, 3, 9], "gene": [1, 3, 6, 8, 10], "sampl": [1, 3, 4, 6, 8, 10], "nb": [1, 4, 10], "infer": [1, 3, 6, 7, 8, 9, 11, 13], "appli": [1, 6, 8], "target": [1, 3, 10], "up": [1, 7, 9, 13], "visual": [1, 6, 13], "result": [1, 6, 13], "us": [1, 3, 4, 6, 7, 8, 9, 10, 13], "umap": [1, 6], "thi": [1, 3, 4, 6, 8, 9, 10], "method": [1, 3, 4, 6, 8, 9, 10], "retriev": [1, 3, 9], "an": [1, 3, 4, 6, 9, 10, 13], "anndata": [1, 3, 6, 13], "each": [1, 3, 6, 8, 9, 10], "pair": [1, 10], "construct": [1, 9], "neighborhood": 1, "graph": [1, 8, 10], "comput": [1, 3, 4, 6, 8, 10], "embed": [1, 8], "3": [1, 6, 10], "iter": 1, "reduc": 1, "resolut": 1, "until": [1, 4], "five": 1, "fewer": 1, "ar": [1, 3, 4, 6, 8, 9, 10, 13], "obtain": [1, 3, 6], "minimum": [1, 10], "i": [1, 3, 4, 6, 8, 9, 10, 12, 13], "reach": 1, "4": [1, 6, 10], "plot": [1, 6, 10], "project": 1, "color": 1, "either": [1, 10], "specifi": [1, 3, 4, 6, 9, 10, 13], "column": [1, 3, 8, 10], "addit": 1, "attribut": [1, 3, 6], "batch": [1, 3, 6, 8, 9, 10], "subtyp": 1, "avail": [1, 13], "arg": [1, 3, 4, 6, 8, 9, 10, 12, 13], "str": [1, 3, 6, 8, 9, 10, 12, 13], "option": [1, 4, 6, 8, 9, 10, 13], "name": [1, 3, 6, 9, 10, 13], "adata": [1, 3], "ob": [1, 3, 6], "which": [1, 3, 4, 8, 9, 10, 13], "default": [1, 3, 4], "rais": [1, 3, 4, 6, 8, 9, 10, 12, 13], "ani": [1, 3, 6, 8, 10], "warn": 1, "suppress": 1, "handl": [1, 3, 6], "intern": [1, 9], "when": 1, "cluster_latent_spac": 1, "latent": [1, 6, 8], "represent": [1, 8, 10, 12], "parent": [1, 3, 6], "space": [1, 4, 6, 8], "present": [1, 6, 8], "cluster_true_count": 1, "observ": [1, 4, 6], "those": [1, 3], "input": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13], "train": [1, 3, 6, 8, 9, 10, 13], "origin": [1, 3, 6, 8], "inferen": 1, "register_clust": 1, "regist": [1, 6, 13], "current": [1, 6, 8, 10, 13], "instanc": [1, 3, 6, 8, 13], "check": [1, 3, 6, 9, 10, 13], "same": [1, 3, 6, 9, 10], "self": [1, 3], "alreadi": [1, 6, 10, 12, 13], "If": [1, 3, 4, 6, 8, 9, 10, 12, 13], "found": [1, 3, 10, 13], "deep": 1, "copi": [1, 6, 10], "store": [1, 8, 9], "under": [1, 4, 9], "preffecterror": [1, 5, 6, 11, 13], "exist": [1, 3, 6, 9, 10, 13], "overwrit": [1, 6], "permiss": [1, 6, 10], "ffpe_dataset": [3, 8, 9, 11], "config": [3, 6, 7, 8, 9, 10, 13], "learning_typ": 3, "dataset": [3, 6, 8, 9, 10], "start": 3, "loader": [3, 9], "mcar": 3, "argument": [3, 4], "simul": 3, "miss": [3, 6, 9], "complet": 3, "At": 3, "random": [3, 4, 10], "fraction": [3, 6], "element": [3, 6, 8, 10], "tensor": [3, 4, 6, 8, 10], "list": [3, 6, 8, 9, 10], "x": [3, 4, 8], "as_orig": 3, "dropout": [3, 8], "assign": 3, "variabl": [3, 6, 8, 10], "between": [3, 6, 8], "lambda": [3, 4], "dict": [3, 6, 7, 8, 9, 10, 13], "dictionari": [3, 4, 6, 7, 8, 9, 10, 13], "follow": [3, 4, 8], "kei": [3, 6, 8, 9, 10, 13], "lambda_count": 3, "maximum": [3, 10], "rate": [3, 4], "express": [3, 4, 6, 8, 10], "matrix": [3, 8], "lambda_edg": 3, "adjac": [3, 8], "torch": [3, 4, 6, 8, 10], "new": [3, 9], "indic": [3, 4, 6, 8, 10, 13], "locat": 3, "within": [3, 6, 8, 13], "edg": [3, 8], "non": [3, 4, 8], "mask": 3, "pad": [3, 6], "check_fidelity_of_anndata": 3, "function": [3, 4, 8, 9, 10, 13], "valid": [3, 4, 8, 9, 10], "id": 3, "var": [3, 4, 10], "must": [3, 4], "tabl": [3, 6, 10], "expect": [3, 4, 6, 8, 10, 12, 13], "obs_nam": 3, "presenc": 3, "aj": 3, "correl": 3, "modifi": [3, 8], "so": 3, "consid": [3, 8, 10], "downstream": 3, "sample_associ": 3, "obsm": 3, "associ": [3, 9], "other": [3, 6, 8, 9, 10], "tau_1": 3, "tau_2": 3, "etc": [3, 4, 6, 10, 13], "consequ": 3, "n": [3, 8, 12], "calt": 3, "uniqu": [3, 10], "certain": 3, "tissu": [3, 6, 8], "cell": [3, 10], "unassoci": 3, "should": [3, 6, 9, 10], "read": [3, 6, 10, 12], "na": 3, "nan": [3, 10], "load": [3, 8], "file": [3, 6, 8, 9, 10, 12, 13], "bool": [3, 4, 8, 12, 13], "true": [3, 6, 10, 12, 13], "all": [3, 6, 10], "pass": [3, 8, 10], "clamp_tensor_valu": 3, "tensor_list": 3, "clamp": 3, "pre": [3, 8], "defin": [3, 4, 8], "threshold": 3, "6": [3, 6], "less": 3, "than": [3, 4], "also": [3, 8], "convert": [3, 6, 12], "float": [3, 4, 8, 10], "pytorch": [3, 8, 10], "stack": 3, "along": [3, 10], "dimens": 3, "dim": 3, "filter_nans_from_coo": 3, "m": [3, 8], "filter": 3, "coo": 3, "coordin": 3, "spars": 3, "matric": [3, 8], "take": 3, "out": 3, "need": [3, 10], "filtered_m": 3, "note": 3, "assum": [3, 6, 10], "format": [3, 6, 10], "from_anndata_2_numpi": 3, "info": 3, "creat": [3, 6, 8, 10, 13], "sever": 3, "anndata_orig": 3, "raw": [3, 6, 8], "structur": [3, 6, 8], "thei": [3, 10], "have": [3, 6, 10], "been": [3, 6], "fidel": 3, "seri": [3, 6, 10], "Not": 3, "sure": 3, "yet": 3, "anyth": 3, "here": 3, "from_numpy_2_tensor": 3, "multipl": [3, 6, 10], "It": [3, 4, 6, 8, 10], "r": [3, 8], "As": 3, "ss": 3, "transform": [3, 8], "max": 3, "100000": 3, "k": [3, 8], "after": [3, 6, 8, 10, 13], "concaten": [3, 6, 9], "datafram": [3, 10], "as_ej_index": 3, "similar": 3, "panda": 3, "log": [3, 4, 7, 8, 9, 10, 13], "place": 3, "get_ghost_indic": 3, "ghost": [3, 8], "particular": [3, 6], "int": [3, 6, 8, 9, 10, 13], "integ": [3, 4, 8, 10, 13], "repres": [3, 4, 6, 8, 10], "index": [3, 9, 10, 11], "rang": 3, "correspond": [3, 6, 8, 10, 12], "sample_tissue_map": 3, "assertionerror": [3, 9], "harmonize_sampl": 3, "order": [3, 6], "row": [3, 10], "col": 3, "relat": [3, 5], "combin": [3, 6, 8], "sample_sample_adj": 3, "varm": 3, "unaffect": 3, "doesn": 3, "t": [3, 12], "one": [3, 4, 6, 8, 10], "more": 3, "we": [3, 4, 6], "across": [3, 6, 8, 10], "provid": [3, 4, 6, 7, 8, 10, 13], "length": 3, "restructur": 3, "entri": 3, "ad": [3, 6], "easi": 3, "identif": 3, "requir": [3, 8, 10, 13], "re": 3, "arrang": 3, "align": 3, "ha": [3, 4, 6, 8], "per": [3, 6, 8], "e": [3, 6, 8], "g": [3, 6, 8], "can": [3, 10], "onli": [3, 6, 10], "differ": [3, 6, 8, 10], "due": [3, 9], "step": [3, 8], "load_anndata": 3, "h5ad": 3, "directori": [3, 6, 7, 9, 10, 13], "tau_x": 3, "determin": [3, 6], "sort": [3, 10], "tau": [3, 10], "2": [3, 4, 6, 10], "learn": 3, "type": [3, 4, 6, 7, 8, 10, 12], "test": 3, "impute_experi": 3, "adjust": [3, 6], "path": [3, 7, 9, 10, 12, 13], "accordingli": 3, "simpl": [3, 6, 8], "model": [3, 4, 6, 8, 9, 10], "8": [3, 4, 6], "convent": 3, "pad_adjacency_matric": 3, "adj_mat": 3, "final_shap": 3, "achiev": 3, "shape": [3, 4, 8, 10], "2d": 3, "final": [3, 4, 8], "adj_mat_new": 3, "right": [3, 4], "bottom": 3, "prep_batch_iter": 3, "trivial_batch": 3, "split": 3, "divid": 3, "mini_batch_s": 3, "number": [3, 4, 6, 8, 10, 13], "mini": [3, 6, 8, 10], "final_x_batch": 3, "final_r_batch": 3, "final_k_batch": 3, "randomli": 3, "separ": 3, "final_idx_batch": 3, "minibatch": [3, 4, 6, 8], "select_gen": 3, "perform": [3, 6, 8, 9, 10, 13], "desir": 3, "limit": [3, 6], "highest": 3, "remov": [3, 8, 10], "trim": [3, 6], "trim_high_expressed_gen": 3, "select_sampl": 3, "select": [3, 6], "inf": 3, "chosen": 3, "normal": [3, 4], "match": [3, 4], "updat": [3, 8, 13], "setup_categorical_vari": 3, "configur": [3, 6, 7, 8, 9, 10, 12, 13], "categor": [3, 8, 10], "vars_to_correct": 3, "sample_metadata": 3, "hot": [3, 8, 10], "encod": [3, 8, 10, 11], "adjust_target_batch": 3, "first": [3, 6, 8, 10], "second": [3, 8], "dure": [3, 6, 8, 9, 10], "level": [3, 8], "specif": [3, 6, 8, 10, 13], "": [3, 6, 8, 10], "correct": [3, 6, 8], "correction_var": 3, "negativebinomi": [4, 11], "total_count": 4, "prob": 4, "logit": [4, 10], "scale": 4, "validate_arg": 4, "distribut": [4, 8, 10], "One": [4, 10], "parameter": [4, 10], "failur": [4, 10], "experi": [4, 8], "stop": 4, "success": 4, "probabl": [4, 8], "scvi": 4, "tool": 4, "control": 4, "invers": 4, "In": 4, "gener": [4, 6, 8, 10], "w": 4, "sim": 4, "textrm": 4, "gamma": 4, "left": 4, "frac": 4, "poisson": [4, 11], "valueerror": [4, 10], "do": [4, 10], "constraint": 4, "arg_constraint": 4, "greater": 4, "equal": 4, "support": 4, "greaterthaneq": 4, "lower_bound": 4, "log_prob": 4, "calcul": [4, 6, 8, 10], "likelihood": 4, "userwarn": 4, "outsid": 4, "sample_shap": 4, "union": [4, 6, 8], "size": [4, 6, 8, 10], "mixtur": 4, "singl": [4, 6, 8, 9, 10], "integergreaterthan": 4, "varianc": [4, 8, 10], "deriv": [4, 8], "formula": 4, "discret": 4, "event": 4, "occur": [4, 9, 10], "fix": 4, "interv": 4, "time": 4, "known": 4, "constant": 4, "independ": 4, "sinc": [4, 6], "last": 4, "character": 4, "averag": [4, 6, 8, 10], "occurr": 4, "commonli": 4, "amount": 4, "distanc": [4, 8], "area": 4, "whether": [4, 8], "zeroinflatednegativebinomi": [4, 11], "zi_logit": 4, "These": 4, "respect": [4, 10, 12], "real": 4, "empti": 4, "notimplementederror": 4, "implement": [4, 6], "zi": 4, "zi_prob": 4, "log_nb_posit": [4, 11], "ep": 4, "08": 4, "log_fn": 4, "callabl": 4, "built": 4, "lgamma_fn": 4, "lgamma": 4, "scalar": 4, "accord": 4, "posit": 4, "small": 4, "numer": [4, 10], "stabil": 4, "logarithm": 4, "log_zinb_posit": [4, 11], "parametr": 4, "bernoulli": 4, "henc": 4, "appear": 4, "softplu": 4, "except": [5, 8, 9, 10, 13], "custom": 5, "preffect": [5, 6, 9, 10, 13], "error": [5, 6, 9, 10], "preffect_obj": [6, 13], "task": [6, 13], "inference_kei": [6, 13], "inference_overwrit": 6, "calculate_imputation_error": 6, "error_typ": [6, 13], "mse": 6, "concatenate_1d_minibatch": 6, "l": 6, "full_idx": 6, "sublist": [6, 10], "1d": 6, "nest": 6, "inner": [6, 10], "retain": 6, "might": 6, "concatenate_2d_minibatch": 6, "consist": [6, 10], "ndarrai": [6, 10], "impute_valu": 6, "imput": 6, "simplest": 6, "form": 6, "reconstruct": [6, 8], "output": [6, 8, 10, 13], "run": 6, "befor": [6, 10, 13], "call": [6, 8, 13], "reconstruct_from_minibatch": 6, "idx_batch": [6, 8, 10], "full": [6, 8], "variou": [6, 8, 10], "process": [6, 8, 9, 10, 13], "unifi": 6, "aspect": 6, "latent_vari": [6, 8], "lib_size_factor": [6, 8], "x_hat": [6, 8], "overal": 6, "z_l": [6, 8], "x_hat_mu": 6, "x_hat_theta": 6, "z_a": [6, 8], "potenti": 6, "depend": [6, 8, 13], "register_inference_run": 6, "doe": [6, 10, 12], "grant": 6, "inference_dict": 6, "configs_inf": 6, "being": [6, 8, 10], "avoid": 6, "unintend": 6, "modif": 6, "return_counts_as_anndata": 6, "further": [6, 8], "analysi": 6, "condit": [6, 8], "return_latent_space_as_anndata": 6, "z_simpl": [6, 8], "neither": 6, "nor": 6, "run_infer": 6, "execut": [6, 13], "includ": [6, 8, 9, 10, 13], "aggreg": 6, "save": [6, 9, 10, 13], "save_visu": 6, "vlib": 6, "filenam": [6, 9, 10, 13], "matplotlib": 6, "figur": 6, "pdf": 6, "extens": 6, "visualize_batch_adjust": 6, "side": 6, "scatter": 6, "compar": 6, "purpos": 6, "see": 6, "wa": 6, "effect": 6, "comparison": 6, "increas": 6, "quadraticli": 6, "necessari": [6, 9, 10], "access": [6, 8, 10, 13], "fetch": [6, 13], "librari": [6, 8], "visualize_fraction_pi_per_gen": 6, "go": 6, "through": [6, 8], "pref_obj": 6, "pyplot": 6, "visualize_gene_scatterplot": 6, "50": 6, "endogen": 6, "both": 6, "visualize_latent_recons_umap": 6, "my_cmap": 6, "visualize_lib_s": [6, 13], "histogram": 6, "them": [6, 8], "visualize_libsize_and_dispers": 6, "setup_logg": [7, 11], "logger": [7, 8, 9, 10, 13], "applic": [7, 8], "refer": 7, "forward": [7, 8, 13], "_model": 8, "decod": [8, 11], "r_prime": 8, "alpha": 8, "model_typ": 8, "neural": 8, "network": 8, "gat": 8, "autoencod": 8, "dimension": 8, "intermedi": 8, "categori": [8, 10], "ignor": 8, "featur": 8, "slope": 8, "leakyrelu": 8, "activ": [8, 10], "regular": 8, "flag": 8, "layer1": 8, "nn": 8, "linear": 8, "layer": 8, "layer2": 8, "layer3": 8, "third": 8, "leaky_relu": 8, "dropout1": 8, "dropout2": 8, "z": 8, "ej": 8, "placehold": 8, "continu": 8, "init_weight": 8, "initi": [8, 9, 13], "weight": 8, "xavier": 8, "prepare_latent_space_with_korrection_var": 8, "lat_spac": 8, "h": 8, "incorpor": 8, "total_cat": 8, "sum": 8, "in_channel": 8, "attent": 8, "gatv2conv": 8, "mu_lay": 8, "logvar_lay": 8, "logvar": 8, "libdecod": [8, 11], "back": 8, "lib_decode_size_factor": 8, "lib_decode_size_factor_2": 8, "leaki": 8, "relu": 8, "modulelist": 8, "oper": [8, 9, 13], "libencod": [8, 11], "layer_lib1": 8, "layer_lib_mu": 8, "layer_lib_logvar": 8, "prevent": 8, "overfit": 8, "log_lib": 8, "vae": [8, 9, 11], "variat": 8, "captur": 8, "prepar": [8, 9], "batch_centroid_loss": 8, "loss": [8, 10], "euclidean": 8, "centroid": 8, "experiment": 8, "num_sampl": 8, "latent_dim": 8, "membership": 8, "num_batch": 8, "upper": 8, "triangular": 8, "latent_var": 8, "reparameter": [8, 10], "encode_reparameter": 8, "like": [8, 10, 13], "interact": 8, "dl": 8, "da": 8, "distributional_paramet": 8, "omega": 8, "produc": 8, "two": 8, "sub": 8, "latent_spac": 8, "z_x": 8, "part": 8, "x_batch": 8, "r_batch": 8, "k_batch": 8, "ej_batch": 8, "predict": 8, "factor": 8, "post": 8, "px_dispers": 8, "px_omega": 8, "init_weights_va": 8, "load_pretrained_model": 8, "state": [8, 10, 13], "evalu": 8, "mode": 8, "issu": [8, 9, 10, 13], "folder": [8, 10], "rs_batch": 8, "adj_batch": 8, "prefix": 8, "epoch": [8, 10], "generative_output": 8, "record": [8, 9], "properti": 8, "helper": 8, "phase": 8, "val": [8, 10], "over": 8, "metric": [8, 10], "remove_ghost_sampl": 8, "adj_rs_batch": 8, "adjusted_generative_output": 8, "vector": 8, "smapl": 8, "_data_load": [8, 11], "py": [8, 11], "gaussian": [8, 10], "natur": 8, "set_parameter_requires_grad": 8, "requires_grad": 8, "enabl": [8, 10], "disabl": 8, "typic": 8, "fine": 8, "tune": 8, "forward_log": [9, 13], "existing_sess": 9, "extract_batch": 9, "idx": 9, "map": 9, "remain": 9, "item": 9, "find_inference_in_regist": 9, "ir_nam": 9, "its": [9, 10], "search": [9, 11], "otherwis": [9, 13], "prep_from_existing_sess": 9, "restor": 9, "session": 9, "output_path": [9, 13], "endogenous_file_nam": 9, "while": 9, "try": 9, "could": [9, 10], "corrupt": 9, "incompat": 9, "prep_new_sess": 9, "optim": 9, "devic": [9, 10, 13], "messag": [9, 10, 13], "setup": [9, 10, 13], "misconfigur": 9, "fname": [9, 13], "disk": 9, "nick_nam": 9, "pth": 9, "ffpe": 9, "_logger_config": [9, 11], "saniti": 9, "fail": 9, "_config": [9, 11, 12], "To": [10, 11], "dev": 10, "transfer": 10, "move": 10, "zinb_expected_valu": [10, 11], "adjusted_categorical_correction_vari": [10, 11], "df": 10, "cat_var": 10, "target_valu": 10, "calculate_and_sort_by_iqr": [10, 11], "expr": 10, "gene_nam": 10, "force_pam50": 10, "force_bc_gen": 10, "iqr": 10, "frame": 10, "categorical_correction_vari": [10, 11], "check_folder_access": [10, 11], "adher": 10, "filesystem": 10, "absolut": 10, "rel": 10, "work": 10, "filenotfounderror": 10, "permissionerror": 10, "end": 10, "check_for_nan": [10, 11], "obj": 10, "msg": 10, "displai": 10, "check_int_and_uniq": [10, 11], "file_num": 10, "phrase": 10, "copy_fil": [10, 11], "source_path": 10, "destination_path": 10, "sourc": 10, "destin": 10, "ioerror": 10, "catch": 10, "unforeseen": 10, "ensure_directori": [10, 11], "directory_path": 10, "ensur": [10, 13], "noth": 10, "logging_help": [10, 11], "dic": 10, "logging_tensor": [10, 11], "detail": [10, 13], "dtype": 10, "infin": 10, "print": 10, "multi_logging_tensor": [10, 11], "thing": 10, "intend": 10, "allow": 10, "effici": 10, "monitor": 10, "stage": 10, "three": 10, "descript": 10, "preced": 10, "one_hot_encod": [10, 11], "column_tensor": 10, "plot_progress": [10, 11], "titl": 10, "progress": 10, "plot_progression_al": [10, 11], "x_dim": 10, "y_dim": 10, "overrid": 10, "file_path": [10, 12], "average_loss": 10, "kl_gene": 10, "subplot": 10, "grid": 10, "print_loss_t": [10, 11], "well": 10, "header": 10, "string": [10, 12], "standard": 10, "reparameterize_gaussian": [10, 11], "sanity_check_on_config": [10, 11], "preffect_con": 10, "train_ds_con": 10, "valid_ds_con": 10, "assert": 10, "meet": 10, "predefin": 10, "criteria": 10, "critic": 10, "mismatch": 10, "environ": [10, 13], "No": 10, "selective_one_hot": [10, 11], "set_se": [10, 11], "config_se": 10, "seed": 10, "reproduc": 10, "target_specific_one_hot": [10, 11], "torch_mtx_unbatch": [10, 11], "mtx": 10, "umap_draw_lat": [10, 11], "results_from_forward": 10, "batch_info": 10, "update_composite_config": [10, 11], "modul": 11, "_distribut": 11, "_model_pi": 11, "preffect_cli": 11, "read_config_fil": [11, 12], "str2bool": [11, 12], "preffect_factori": 11, "core_only_copi": [11, 13], "factori": [11, 13], "factory_setup": [11, 13], "generate_and_save_visu": [11, 13], "setup_cuda": [11, 13], "_preffect": [11, 13], "_infer": 11, "_util": 11, "_error": 11, "_cluster": 11, "_zinbestim": 11, "page": 11, "pars": 12, "configpars": 12, "v": 12, "truth": 12, "boolean": [12, 13], "accept": 12, "ye": 12, "y": 12, "f": 12, "directli": 12, "argpars": 12, "argumenttypeerror": 12, "old": 13, "always_sav": 13, "trigger_setup": 13, "inference_obj": 13, "reinstat": 13, "alwai": 13, "trigger": 13, "pr": 13, "instanti": 13, "ir": 13, "inference_obj_nam": 13, "identifi": 13, "cluster_lat": 13, "invalid": 13, "resourc": 13, "request": 13, "cuda": 13, "input_anndata_path": 13, "basic": 13, "input_inference_anndata_path": 13, "cuda_device_num": 13, "no_cuda": 13, "forc": 13, "cpu": 13, "even": 13, "cuda_device_numb": 13, "input_log": 13, "inference_log": 13, "inaccess": 13, "inference_inst": 13, "imag": 13}, "objects": {"": [[2, 0, 0, "-", "_config"], [3, 0, 0, "-", "_data_loader"], [4, 0, 0, "-", "_distributions"], [5, 0, 0, "-", "_error"], [6, 0, 0, "-", "_inference"], [7, 0, 0, "-", "_logger_config"], [8, 0, 0, "-", "_model"], [9, 0, 0, "-", "_preffect"], [10, 0, 0, "-", "_utils"], [12, 0, 0, "-", "preffect_cli"], [13, 0, 0, "-", "preffect_factory"]], "_data_loader": [[3, 1, 1, "data_loader.FFPE_dataset", "FFPE_dataset"]], "_data_loader.FFPE_dataset": [[3, 2, 1, "data_loader.FFPE_dataset.MCAR", "MCAR"], [3, 2, 1, "data_loader.FFPE_dataset.check_fidelity_of_anndata", "check_fidelity_of_anndata"], [3, 2, 1, "data_loader.FFPE_dataset.clamp_tensor_values", "clamp_tensor_values"], [3, 2, 1, "data_loader.FFPE_dataset.filter_NaNs_from_COO", "filter_NaNs_from_COO"], [3, 2, 1, "data_loader.FFPE_dataset.from_anndata_2_numpy", "from_anndata_2_numpy"], [3, 2, 1, "data_loader.FFPE_dataset.from_numpy_2_tensors", "from_numpy_2_tensors"], [3, 2, 1, "data_loader.FFPE_dataset.get_ghost_indices", "get_ghost_indices"], [3, 2, 1, "data_loader.FFPE_dataset.harmonize_samples", "harmonize_samples"], [3, 2, 1, "data_loader.FFPE_dataset.load_anndata", "load_anndata"], [3, 2, 1, "data_loader.FFPE_dataset.pad_adjacency_matrices", "pad_adjacency_matrices"], [3, 2, 1, "data_loader.FFPE_dataset.prep_batch_iterator", "prep_batch_iterator"], [3, 2, 1, "data_loader.FFPE_dataset.select_genes", "select_genes"], [3, 2, 1, "data_loader.FFPE_dataset.select_samples", "select_samples"], [3, 2, 1, "data_loader.FFPE_dataset.setup_categorical_variables", "setup_categorical_variables"]], "_distributions": [[4, 1, 1, "distributions.NegativeBinomial", "NegativeBinomial"], [4, 1, 1, "distributions.Poisson", "Poisson"], [4, 1, 1, "distributions.ZeroInflatedNegativeBinomial", "ZeroInflatedNegativeBinomial"], [4, 4, 1, "distributions.log_nb_positive", "log_nb_positive"], [4, 4, 1, "distributions.log_zinb_positive", "log_zinb_positive"]], "_distributions.NegativeBinomial": [[4, 3, 1, "id0", "arg_constraints"], [4, 2, 1, "distributions.NegativeBinomial.log_prob", "log_prob"], [4, 2, 1, "distributions.NegativeBinomial.mean", "mean"], [4, 2, 1, "distributions.NegativeBinomial.sample", "sample"], [4, 3, 1, "id1", "support"], [4, 2, 1, "distributions.NegativeBinomial.variance", "variance"]], "_distributions.ZeroInflatedNegativeBinomial": [[4, 3, 1, "distributions.ZeroInflatedNegativeBinomial.arg_constraints", "arg_constraints"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.log_prob", "log_prob"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.mean", "mean"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.sample", "sample"], [4, 3, 1, "distributions.ZeroInflatedNegativeBinomial.support", "support"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.variance", "variance"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.zi_logits", "zi_logits"], [4, 2, 1, "distributions.ZeroInflatedNegativeBinomial.zi_probs", "zi_probs"]], "_error": [[5, 5, 1, "error.PreffectError", "PreffectError"]], "_inference": [[6, 1, 1, "inference.Inference", "Inference"]], "_inference.Inference": [[6, 2, 1, "inference.Inference.calculate_imputation_error", "calculate_imputation_error"], [6, 2, 1, "inference.Inference.concatenate_1d_minibatch", "concatenate_1d_minibatch"], [6, 2, 1, "inference.Inference.concatenate_2d_minibatch", "concatenate_2d_minibatch"], [6, 2, 1, "inference.Inference.impute_values", "impute_values"], [6, 2, 1, "inference.Inference.reconstruct_from_minibatches", "reconstruct_from_minibatches"], [6, 2, 1, "inference.Inference.register_inference_run", "register_inference_run"], [6, 2, 1, "inference.Inference.return_counts_as_anndata", "return_counts_as_anndata"], [6, 2, 1, "inference.Inference.return_latent_space_as_anndata", "return_latent_space_as_anndata"], [6, 2, 1, "inference.Inference.run_inference", "run_inference"], [6, 2, 1, "inference.Inference.save", "save"], [6, 2, 1, "inference.Inference.save_visualization", "save_visualization"], [6, 2, 1, "inference.Inference.visualize_batch_adjustment", "visualize_batch_adjustment"], [6, 2, 1, "inference.Inference.visualize_fraction_pi_per_gene", "visualize_fraction_pi_per_gene"], [6, 2, 1, "inference.Inference.visualize_gene_scatterplot", "visualize_gene_scatterplot"], [6, 2, 1, "inference.Inference.visualize_latent_recons_umap", "visualize_latent_recons_umap"], [6, 2, 1, "inference.Inference.visualize_lib_size", "visualize_lib_size"], [6, 2, 1, "inference.Inference.visualize_libsize_and_dispersion", "visualize_libsize_and_dispersion"]], "_logger_config": [[7, 4, 1, "logger_config.setup_loggers", "setup_loggers"]], "_model": [[8, 1, 1, "model.Decoder", "Decoder"], [8, 1, 1, "model.Encoder", "Encoder"], [8, 1, 1, "model.LibDecoder", "LibDecoder"], [8, 1, 1, "model.LibEncoder", "LibEncoder"], [8, 1, 1, "model.VAE", "VAE"]], "_model.Decoder": [[8, 2, 1, "model.Decoder.decode", "decode"], [8, 2, 1, "model.Decoder.init_weights", "init_weights"], [8, 2, 1, "model.Decoder.prepare_latent_space_with_korrection_vars", "prepare_latent_space_with_korrection_vars"], [8, 3, 1, "model.Decoder.training", "training"]], "_model.Encoder": [[8, 2, 1, "model.Encoder.encode", "encode"], [8, 2, 1, "model.Encoder.init_weights", "init_weights"], [8, 2, 1, "model.Encoder.prepare_latent_space_with_korrection_vars", "prepare_latent_space_with_korrection_vars"], [8, 3, 1, "model.Encoder.training", "training"]], "_model.LibDecoder": [[8, 2, 1, "model.LibDecoder.decode", "decode"], [8, 2, 1, "model.LibDecoder.init_weights", "init_weights"], [8, 2, 1, "model.LibDecoder.prepare_latent_space_with_korrection_vars", "prepare_latent_space_with_korrection_vars"], [8, 3, 1, "model.LibDecoder.training", "training"]], "_model.LibEncoder": [[8, 2, 1, "model.LibEncoder.encode", "encode"], [8, 2, 1, "model.LibEncoder.init_weights", "init_weights"], [8, 2, 1, "model.LibEncoder.prepare_latent_space_with_korrection_vars", "prepare_latent_space_with_korrection_vars"], [8, 3, 1, "model.LibEncoder.training", "training"]], "_model.VAE": [[8, 2, 1, "model.VAE.batch_centroid_loss", "batch_centroid_loss"], [8, 2, 1, "model.VAE.decode", "decode"], [8, 2, 1, "model.VAE.encode_reparameterization", "encode_reparameterization"], [8, 2, 1, "model.VAE.forward", "forward"], [8, 2, 1, "model.VAE.init_weights_vae", "init_weights_vae"], [8, 2, 1, "model.VAE.load_pretrained_model", "load_pretrained_model"], [8, 2, 1, "model.VAE.loss", "loss"], [8, 2, 1, "model.VAE.remove_ghost_samples", "remove_ghost_samples"], [8, 2, 1, "model.VAE.reparameterize", "reparameterize"], [8, 2, 1, "model.VAE.set_parameter_requires_grad", "set_parameter_requires_grad"], [8, 3, 1, "model.VAE.training", "training"]], "_preffect": [[9, 1, 1, "preffect.Preffect", "Preffect"]], "_preffect.Preffect": [[9, 2, 1, "preffect.Preffect.extract_batch", "extract_batch"], [9, 2, 1, "preffect.Preffect.find_inference_in_register", "find_inference_in_register"], [9, 2, 1, "preffect.Preffect.prep_from_existing_session", "prep_from_existing_session"], [9, 2, 1, "preffect.Preffect.prep_new_session", "prep_new_session"], [9, 2, 1, "preffect.Preffect.save", "save"], [9, 2, 1, "preffect.Preffect.train", "train"]], "_utils": [[10, 4, 1, "utils.To", "To"], [10, 4, 1, "utils.ZINB_expected_value", "ZINB_expected_value"], [10, 4, 1, "utils.adjusted_categorical_correction_variable", "adjusted_categorical_correction_variable"], [10, 4, 1, "utils.calculate_and_sort_by_iqr", "calculate_and_sort_by_iqr"], [10, 4, 1, "utils.categorical_correction_variable", "categorical_correction_variable"], [10, 4, 1, "utils.check_folder_access", "check_folder_access"], [10, 4, 1, "utils.check_for_nans", "check_for_nans"], [10, 4, 1, "utils.check_int_and_uniq", "check_int_and_uniq"], [10, 4, 1, "utils.copy_file", "copy_file"], [10, 4, 1, "utils.ensure_directory", "ensure_directory"], [10, 4, 1, "utils.logging_helper", "logging_helper"], [10, 4, 1, "utils.logging_tensor", "logging_tensor"], [10, 4, 1, "utils.multi_logging_tensor", "multi_logging_tensor"], [10, 4, 1, "utils.one_hot_encode", "one_hot_encode"], [10, 4, 1, "utils.plot_progression", "plot_progression"], [10, 4, 1, "utils.plot_progression_all", "plot_progression_all"], [10, 4, 1, "utils.print_loss_table", "print_loss_table"], [10, 4, 1, "utils.reparameterize_gaussian", "reparameterize_gaussian"], [10, 4, 1, "utils.sanity_check_on_configs", "sanity_check_on_configs"], [10, 4, 1, "utils.selective_one_hot", "selective_one_hot"], [10, 4, 1, "utils.set_seeds", "set_seeds"], [10, 4, 1, "utils.target_specific_one_hot", "target_specific_one_hot"], [10, 4, 1, "utils.torch_mtx_unbatching", "torch_mtx_unbatching"], [10, 4, 1, "utils.umap_draw_latent", "umap_draw_latent"], [10, 4, 1, "utils.update_composite_configs", "update_composite_configs"]], "preffect_cli": [[12, 4, 1, "", "read_config_file"], [12, 4, 1, "", "str2bool"]], "preffect_factory": [[13, 4, 1, "", "core_only_copy"], [13, 4, 1, "", "factory"], [13, 4, 1, "", "factory_setup"], [13, 4, 1, "", "generate_and_save_visualizations"], [13, 4, 1, "", "setup_cuda"]], "wrappers": [[0, 0, 0, "-", "_ZINBEstimator"], [1, 0, 0, "-", "_cluster"]], "wrappers._ZINBEstimator": [[0, 1, 1, "", "ZINBEstimator"]], "wrappers._ZINBEstimator.ZINBEstimator": [[0, 2, 1, "", "compute_zinb_params"]], "wrappers._cluster": [[1, 1, 1, "", "Cluster"]], "wrappers._cluster.Cluster": [[1, 2, 1, "", "cluster_counts"], [1, 2, 1, "", "cluster_latent_space"], [1, 2, 1, "", "cluster_true_counts"], [1, 2, 1, "", "register_cluster"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"_zinbestim": 0, "py": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13], "_cluster": 1, "_config": 2, "_data_load": 3, "_distribut": 4, "return": 4, "_error": 5, "_infer": 6, "_logger_config": 7, "_model_pi": 8, "_preffect": 9, "_util": 10, "welcom": 11, "preffect": 11, "": 11, "document": 11, "content": 11, "indic": 11, "tabl": 11, "preffect_cli": 12, "preffect_factori": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"_ZINBEstimator.py module": [[0, "zinbestimator-py-module"]], "_cluster.py module": [[1, "module-wrappers._cluster"]], "_config.py module": [[2, "module-_config"]], "_data_loader.py module": [[3, "module-_data_loader"]], "_distributions.py module": [[4, "module-_distributions"]], "Returns": [[4, "returns"]], "_error.py module": [[5, "module-_error"]], "_inference.py module": [[6, "module-_inference"]], "_logger_config.py module": [[7, "logger-config-py-module"]], "_model_py module": [[8, "module-_model"]], "_preffect.py module": [[9, "module-_preffect"]], "_utils.py module": [[10, "module-_utils"]], "Welcome to PREFFECT's documentation!": [[11, "welcome-to-preffect-s-documentation"]], "Contents:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]], "preffect_cli.py module": [[12, "module-preffect_cli"]], "preffect_factory.py module": [[13, "preffect-factory-py-module"]]}, "indexentries": {"zinbestimator (class in wrappers._zinbestimator)": [[0, "wrappers._ZINBEstimator.ZINBEstimator"]], "compute_zinb_params() (wrappers._zinbestimator.zinbestimator method)": [[0, "wrappers._ZINBEstimator.ZINBEstimator.compute_zinb_params"]], "module": [[0, "module-wrappers._ZINBEstimator"], [1, "module-wrappers._cluster"], [2, "module-_config"], [3, "module-_data_loader"], [4, "module-_distributions"], [5, "module-_error"], [6, "module-_inference"], [7, "module-_logger_config"], [8, "module-_model"], [9, "module-_preffect"], [10, "module-_utils"], [12, "module-preffect_cli"], [13, "module-preffect_factory"]], "wrappers._zinbestimator": [[0, "module-wrappers._ZINBEstimator"]], "cluster (class in wrappers._cluster)": [[1, "wrappers._cluster.Cluster"]], "cluster_counts() (wrappers._cluster.cluster method)": [[1, "wrappers._cluster.Cluster.cluster_counts"]], "cluster_latent_space() (wrappers._cluster.cluster method)": [[1, "wrappers._cluster.Cluster.cluster_latent_space"]], "cluster_true_counts() (wrappers._cluster.cluster method)": [[1, "wrappers._cluster.Cluster.cluster_true_counts"]], "register_cluster() (wrappers._cluster.cluster method)": [[1, "wrappers._cluster.Cluster.register_cluster"]], "wrappers._cluster": [[1, "module-wrappers._cluster"]], "_config": [[2, "module-_config"]], "ffpe_dataset (class in _data_loader)": [[3, "data_loader.FFPE_dataset"]], "mcar() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.MCAR"]], "_data_loader": [[3, "module-_data_loader"]], "check_fidelity_of_anndata() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.check_fidelity_of_anndata"]], "clamp_tensor_values() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.clamp_tensor_values"]], "filter_nans_from_coo() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.filter_NaNs_from_COO"]], "from_anndata_2_numpy() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.from_anndata_2_numpy"]], "from_numpy_2_tensors() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.from_numpy_2_tensors"]], "get_ghost_indices() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.get_ghost_indices"]], "harmonize_samples() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.harmonize_samples"]], "load_anndata() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.load_anndata"]], "pad_adjacency_matrices() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.pad_adjacency_matrices"]], "prep_batch_iterator() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.prep_batch_iterator"]], "select_genes() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.select_genes"]], "select_samples() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.select_samples"]], "setup_categorical_variables() (_data_loader.ffpe_dataset method)": [[3, "data_loader.FFPE_dataset.setup_categorical_variables"]], "negativebinomial (class in _distributions)": [[4, "distributions.NegativeBinomial"]], "poisson (class in _distributions)": [[4, "distributions.Poisson"]], "zeroinflatednegativebinomial (class in _distributions)": [[4, "distributions.ZeroInflatedNegativeBinomial"]], "_distributions": [[4, "module-_distributions"]], "arg_constraints (_distributions.negativebinomial attribute)": [[4, "distributions.NegativeBinomial.arg_constraints"], [4, "id0"]], "arg_constraints (_distributions.zeroinflatednegativebinomial attribute)": [[4, "distributions.ZeroInflatedNegativeBinomial.arg_constraints"]], "log_nb_positive() (in module _distributions)": [[4, "distributions.log_nb_positive"]], "log_prob() (_distributions.negativebinomial method)": [[4, "distributions.NegativeBinomial.log_prob"]], "log_prob() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.log_prob"]], "log_zinb_positive() (in module _distributions)": [[4, "distributions.log_zinb_positive"]], "mean() (_distributions.negativebinomial method)": [[4, "distributions.NegativeBinomial.mean"]], "mean() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.mean"]], "sample() (_distributions.negativebinomial method)": [[4, "distributions.NegativeBinomial.sample"]], "sample() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.sample"]], "support (_distributions.negativebinomial attribute)": [[4, "distributions.NegativeBinomial.support"], [4, "id1"]], "support (_distributions.zeroinflatednegativebinomial attribute)": [[4, "distributions.ZeroInflatedNegativeBinomial.support"]], "variance() (_distributions.negativebinomial method)": [[4, "distributions.NegativeBinomial.variance"]], "variance() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.variance"]], "zi_logits() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.zi_logits"]], "zi_probs() (_distributions.zeroinflatednegativebinomial method)": [[4, "distributions.ZeroInflatedNegativeBinomial.zi_probs"]], "preffecterror": [[5, "error.PreffectError"]], "_error": [[5, "module-_error"]], "inference (class in _inference)": [[6, "inference.Inference"]], "_inference": [[6, "module-_inference"]], "calculate_imputation_error() (_inference.inference method)": [[6, "inference.Inference.calculate_imputation_error"]], "concatenate_1d_minibatch() (_inference.inference method)": [[6, "inference.Inference.concatenate_1d_minibatch"]], "concatenate_2d_minibatch() (_inference.inference method)": [[6, "inference.Inference.concatenate_2d_minibatch"]], "impute_values() (_inference.inference method)": [[6, "inference.Inference.impute_values"]], "reconstruct_from_minibatches() (_inference.inference method)": [[6, "inference.Inference.reconstruct_from_minibatches"]], "register_inference_run() (_inference.inference method)": [[6, "inference.Inference.register_inference_run"]], "return_counts_as_anndata() (_inference.inference method)": [[6, "inference.Inference.return_counts_as_anndata"]], "return_latent_space_as_anndata() (_inference.inference method)": [[6, "inference.Inference.return_latent_space_as_anndata"]], "run_inference() (_inference.inference method)": [[6, "inference.Inference.run_inference"]], "save() (_inference.inference method)": [[6, "inference.Inference.save"]], "save_visualization() (_inference.inference method)": [[6, "inference.Inference.save_visualization"]], "visualize_batch_adjustment() (_inference.inference method)": [[6, "inference.Inference.visualize_batch_adjustment"]], "visualize_fraction_pi_per_gene() (_inference.inference method)": [[6, "inference.Inference.visualize_fraction_pi_per_gene"]], "visualize_gene_scatterplot() (_inference.inference method)": [[6, "inference.Inference.visualize_gene_scatterplot"]], "visualize_latent_recons_umap() (_inference.inference method)": [[6, "inference.Inference.visualize_latent_recons_umap"]], "visualize_lib_size() (_inference.inference method)": [[6, "inference.Inference.visualize_lib_size"]], "visualize_libsize_and_dispersion() (_inference.inference method)": [[6, "inference.Inference.visualize_libsize_and_dispersion"]], "_logger_config": [[7, "module-_logger_config"]], "setup_loggers() (in module _logger_config)": [[7, "logger_config.setup_loggers"]], "decoder (class in _model)": [[8, "model.Decoder"]], "encoder (class in _model)": [[8, "model.Encoder"]], "libdecoder (class in _model)": [[8, "model.LibDecoder"]], "libencoder (class in _model)": [[8, "model.LibEncoder"]], "vae (class in _model)": [[8, "model.VAE"]], "_model": [[8, "module-_model"]], "batch_centroid_loss() (_model.vae method)": [[8, "model.VAE.batch_centroid_loss"]], "decode() (_model.decoder method)": [[8, "model.Decoder.decode"]], "decode() (_model.libdecoder method)": [[8, "model.LibDecoder.decode"]], "decode() (_model.vae method)": [[8, "model.VAE.decode"]], "encode() (_model.encoder method)": [[8, "model.Encoder.encode"]], "encode() (_model.libencoder method)": [[8, "model.LibEncoder.encode"]], "encode_reparameterization() (_model.vae method)": [[8, "model.VAE.encode_reparameterization"]], "forward() (_model.vae method)": [[8, "model.VAE.forward"]], "init_weights() (_model.decoder method)": [[8, "model.Decoder.init_weights"]], "init_weights() (_model.encoder method)": [[8, "model.Encoder.init_weights"]], "init_weights() (_model.libdecoder method)": [[8, "model.LibDecoder.init_weights"]], "init_weights() (_model.libencoder method)": [[8, "model.LibEncoder.init_weights"]], "init_weights_vae() (_model.vae method)": [[8, "model.VAE.init_weights_vae"]], "load_pretrained_model() (_model.vae method)": [[8, "model.VAE.load_pretrained_model"]], "loss() (_model.vae method)": [[8, "model.VAE.loss"]], "prepare_latent_space_with_korrection_vars() (_model.decoder method)": [[8, "model.Decoder.prepare_latent_space_with_korrection_vars"]], "prepare_latent_space_with_korrection_vars() (_model.encoder method)": [[8, "model.Encoder.prepare_latent_space_with_korrection_vars"]], "prepare_latent_space_with_korrection_vars() (_model.libdecoder method)": [[8, "model.LibDecoder.prepare_latent_space_with_korrection_vars"]], "prepare_latent_space_with_korrection_vars() (_model.libencoder method)": [[8, "model.LibEncoder.prepare_latent_space_with_korrection_vars"]], "remove_ghost_samples() (_model.vae method)": [[8, "model.VAE.remove_ghost_samples"]], "reparameterize() (_model.vae method)": [[8, "model.VAE.reparameterize"]], "set_parameter_requires_grad() (_model.vae method)": [[8, "model.VAE.set_parameter_requires_grad"]], "training (_model.decoder attribute)": [[8, "model.Decoder.training"]], "training (_model.encoder attribute)": [[8, "model.Encoder.training"]], "training (_model.libdecoder attribute)": [[8, "model.LibDecoder.training"]], "training (_model.libencoder attribute)": [[8, "model.LibEncoder.training"]], "training (_model.vae attribute)": [[8, "model.VAE.training"]], "preffect (class in _preffect)": [[9, "preffect.Preffect"]], "_preffect": [[9, "module-_preffect"]], "extract_batch() (_preffect.preffect method)": [[9, "preffect.Preffect.extract_batch"]], "find_inference_in_register() (_preffect.preffect method)": [[9, "preffect.Preffect.find_inference_in_register"]], "prep_from_existing_session() (_preffect.preffect method)": [[9, "preffect.Preffect.prep_from_existing_session"]], "prep_new_session() (_preffect.preffect method)": [[9, "preffect.Preffect.prep_new_session"]], "save() (_preffect.preffect method)": [[9, "preffect.Preffect.save"]], "train() (_preffect.preffect method)": [[9, "preffect.Preffect.train"]], "to() (in module _utils)": [[10, "utils.To"]], "zinb_expected_value() (in module _utils)": [[10, "utils.ZINB_expected_value"]], "_utils": [[10, "module-_utils"]], "adjusted_categorical_correction_variable() (in module _utils)": [[10, "utils.adjusted_categorical_correction_variable"]], "calculate_and_sort_by_iqr() (in module _utils)": [[10, "utils.calculate_and_sort_by_iqr"]], "categorical_correction_variable() (in module _utils)": [[10, "utils.categorical_correction_variable"]], "check_folder_access() (in module _utils)": [[10, "utils.check_folder_access"]], "check_for_nans() (in module _utils)": [[10, "utils.check_for_nans"]], "check_int_and_uniq() (in module _utils)": [[10, "utils.check_int_and_uniq"]], "copy_file() (in module _utils)": [[10, "utils.copy_file"]], "ensure_directory() (in module _utils)": [[10, "utils.ensure_directory"]], "logging_helper() (in module _utils)": [[10, "utils.logging_helper"]], "logging_tensor() (in module _utils)": [[10, "utils.logging_tensor"]], "multi_logging_tensor() (in module _utils)": [[10, "utils.multi_logging_tensor"]], "one_hot_encode() (in module _utils)": [[10, "utils.one_hot_encode"]], "plot_progression() (in module _utils)": [[10, "utils.plot_progression"]], "plot_progression_all() (in module _utils)": [[10, "utils.plot_progression_all"]], "print_loss_table() (in module _utils)": [[10, "utils.print_loss_table"]], "reparameterize_gaussian() (in module _utils)": [[10, "utils.reparameterize_gaussian"]], "sanity_check_on_configs() (in module _utils)": [[10, "utils.sanity_check_on_configs"]], "selective_one_hot() (in module _utils)": [[10, "utils.selective_one_hot"]], "set_seeds() (in module _utils)": [[10, "utils.set_seeds"]], "target_specific_one_hot() (in module _utils)": [[10, "utils.target_specific_one_hot"]], "torch_mtx_unbatching() (in module _utils)": [[10, "utils.torch_mtx_unbatching"]], "umap_draw_latent() (in module _utils)": [[10, "utils.umap_draw_latent"]], "update_composite_configs() (in module _utils)": [[10, "utils.update_composite_configs"]], "preffect_cli": [[12, "module-preffect_cli"]], "read_config_file() (in module preffect_cli)": [[12, "preffect_cli.read_config_file"]], "str2bool() (in module preffect_cli)": [[12, "preffect_cli.str2bool"]], "core_only_copy() (in module preffect_factory)": [[13, "preffect_factory.core_only_copy"]], "factory() (in module preffect_factory)": [[13, "preffect_factory.factory"]], "factory_setup() (in module preffect_factory)": [[13, "preffect_factory.factory_setup"]], "generate_and_save_visualizations() (in module preffect_factory)": [[13, "preffect_factory.generate_and_save_visualizations"]], "preffect_factory": [[13, "module-preffect_factory"]], "setup_cuda() (in module preffect_factory)": [[13, "preffect_factory.setup_cuda"]]}})